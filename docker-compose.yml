version: "3.8"
services:
  nginx:
    container_name: nginx
    depends_on:
      - api-server
      - react-app
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "3050:80"
    networks:
      - pern-network

  react-app:
    container_name: react-app
    build:
      context: ./the-fashion-room
      dockerfile: Dockerfile.dev
    stdin_open: true
    ports:
      - "3000:3000"
    networks:
      - pern-network

  api-server:
    container_name: api-server
    build:
      context: ./react-node-app
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    networks:
      - pern-network
    depends_on:
      - postgres-tfr

  postgres-tfr:
    container_name: postgres-tfr
    image: postgres
    restart: always
    ports:
      - "5434:5432"
    networks:
      - pern-network
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=tfr
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin-tfr:
    container_name: pgadmin-tfr
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "81:80"
    networks:
      - pern-network
    depends_on:
      - postgres-tfr

networks:
  pern-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
