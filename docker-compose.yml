version: "3.8"
services:
  nginx:
    container_name: nginx
    depends_on:
      - api
      - client
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - "${NGINX_PORT}:80"
    networks:
      - pern-network

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    restart: always
    stdin_open: true
    ports:
      - "${CLIENT_PORT}:3000"
    environment:
      - WATCHPACK_POLLING=true
    volumes:
      - /usr/src/app/node_modules
      - ./client:/usr/src/app
    networks:
      - pern-network
    depends_on:
      - api

  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "${API_PORT}:3001"
    volumes:
      - /usr/src/app/node_modules
      - ./api:/usr/src/app
    networks:
      - pern-network
    depends_on:
      - postgres-tfr

  postgres-tfr:
    container_name: postgres-tfr
    image: postgres
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - pern-network
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./api/db/createdb.sql:/docker-entrypoint-initdb.d/createdb.sql # creates database's tables.
      - ./api/db/functions.sql:/docker-entrypoint-initdb.d/functions.sql # creates database's functions.
      - ./api/db/insert.sql:/docker-entrypoint-initdb.d/insert.sql # inserts data into database's tables.

  pgadmin-tfr:
    container_name: pgadmin-tfr
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - pern-network
    depends_on:
      - postgres-tfr

networks:
  pern-network:
    driver: bridge

volumes:
  postgres-data:
    name: postgres-data
